import {
    _ as _default,
    O as Fancybox,
    S as Swiper,
    N as Navigation,
    P as Pagination,
    T as Thumb,
    I as Inputmask
} from './vendor.min.js';

import { $ } from './jquery.min.js';

const map = document.getElementById('map');

if (map) {
    let addYaMaps = function () {
        var myMap;
        ymaps.ready(init);
        let myPlacemark;
        function init() {
            (myMap = new ymaps.Map('map', {
                center: [55.730502, 37.644782],
                zoom: 16,
                controls: []
            })),
                (myPlacemark = new ymaps.Placemark(
                    [55.730502, 37.644782],
                    {},
                    {
                        preset: 'islands#redIcon'
                    }
                ));
            myMap.geoObjects.add(myPlacemark);
            _default(myMap, {
                preventScroll: true,
                preventTouch: true
            });
        }
    };
    addYaMaps();
}

window.Fancybox = Fancybox;

Fancybox.bind('[data-fancybox]', {
    dragToClose: false,
    autoFocus: false,
    hideScrollbar: false,
    l10n: {
        CLOSE: 'Закрыть',
        NEXT: 'Следующий',
        PREV: 'Предыдущий',
        MODAL: 'Вы можете закрыть это модальное окно, нажав клавишу ESC'
    }
});

Fancybox.bind('.icon__search[data-fancybox]', {
    dragToClose: false,
    autoFocus: false,
    hideScrollbar: false,
    showClass: 'fancybox-slideDown',
    // Класс для анимации появления
    hideClass: 'fancybox-slideUp',
    // Класс для анимации исчезновения
    l10n: {
        CLOSE: 'Закрыть',
        MODAL: 'Вы можете закрыть это модальное окно, нажав клавишу ESC'
    }
});

const popupSuccessReg = () => {
    const template = `\n        <div class="popup popup-success">\n            <img src="${home_dir}/assets/images/anime-girl.svg" alt="img"/>\n            <div class="popup-title">Вы успешно зарегистрировались!</div>\n            <p>Ваш аккаунт успешно создан, и вы автоматически авторизированы.</p>\n            <p><b>Теперь вы можете:</b></p>\n            <ul>\n                <li>Зайти в свой профиль</li>\n                <li>Быстрее делать заказы</li>\n                <li>Отслеживать статус своих покупок</li>\n                <li>Копить баллы за покупки и расплачиваться ими</li>\n            </ul>\n            <p><b>Хороших покупок!</b></p>\n        </div>\n    `;
    Fancybox.show(
        [
            {
                src: template,
                type: 'html'
            }
        ],
        {
            dragToClose: false,
            autoFocus: false,
            hideScrollbar: false,
            l10n: {
                CLOSE: 'Закрыть',
                MODAL: 'Вы можете закрыть это модальное окно, нажав клавишу ESC'
            }
        }
    );
};

window.popupSuccessReg = popupSuccessReg;

const popupSuccessSubscribe = () => {
    const template = `\n        <div class="popup popup-success">\n            <img src="${home_dir}/assets/images/anime-girl.svg" alt="img"/>\n            <div class="popup-title">Спасибо за подписку на нашу рассылку!</div>\n            <p>Теперь вы будете в курсе новинок, акций и другой полезной информации.\n            <br>\n            <br>\n            Если вам надоест получать наши письма, вы сможете отписаться одним кликом по ссылке в письме.</p>\n        </div>\n    `;
    Fancybox.show(
        [
            {
                src: template,
                type: 'html'
            }
        ],
        {
            dragToClose: false,
            autoFocus: false,
            hideScrollbar: false,
            l10n: {
                CLOSE: 'Закрыть',
                MODAL: 'Вы можете закрыть это модальное окно, нажав клавишу ESC'
            }
        }
    );
};

window.popupSuccessSubscribe = popupSuccessSubscribe;

const popupSuccessReview = () => {
    const template = `\n        <div class="popup popup-success">\n            <img src="${home_dir}/assets/images/anime-girl.svg" alt="img"/>\n            <div class="popup-title">Отзыв успешно отправлен!</div>\n            <p>Наша команда стремится к тому, чтобы каждый клиент остался доволен покупкой. Спасибо за то, что выбрали нас и оставили отзыв о нашей работе!</p>\n        </div>\n    `;
    Fancybox.show(
        [
            {
                src: template,
                type: 'html'
            }
        ],
        {
            dragToClose: false,
            autoFocus: false,
            hideScrollbar: false,
            l10n: {
                CLOSE: 'Закрыть',
                MODAL: 'Вы можете закрыть это модальное окно, нажав клавишу ESC'
            }
        }
    );
};

window.popupSuccessReview = popupSuccessReview;

const popupSuccess = () => {
    const template = `\n        <div class="popup popup-success">\n            <img src="${home_dir}/assets/images/anime-girl.svg" alt="img"/>\n            <div class="popup-title">Спасибо!<br>Заявка отправлена</div>\n            <p>Наш менеджер свяжется с вами в ближайшее время, чтобы уточнить все детали и сориентировать по цене</p>\n        </div>\n    `;
    Fancybox.show(
        [
            {
                src: template,
                type: 'html'
            }
        ],
        {
            dragToClose: false,
            autoFocus: false,
            hideScrollbar: false,
            l10n: {
                CLOSE: 'Закрыть',
                MODAL: 'Вы можете закрыть это модальное окно, нажав клавишу ESC'
            }
        }
    );
};

window.popupSuccess = popupSuccess;

const popupSuccessQuestion = () => {
    const template = `\n        <div class="popup popup-success">\n            <img src="${home_dir}/assets/images/anime-girl.svg" alt="img"/>\n            <div class="popup-title">Спасибо за ваш вопрос!</div>\n            <p>В ближайшее время мы пришлём ответ на ваш email</p>\n        </div>\n    `;
    Fancybox.show(
        [
            {
                src: template,
                type: 'html'
            }
        ],
        {
            dragToClose: false,
            autoFocus: false,
            hideScrollbar: false,
            l10n: {
                CLOSE: 'Закрыть',
                MODAL: 'Вы можете закрыть это модальное окно, нажав клавишу ESC'
            }
        }
    );
};

window.popupSuccessQuestion = popupSuccessQuestion;

let timeout;

function popupAddedCart($img, $productName) {
    clearTimeout(timeout);
    const headerContainer = document.querySelector('#header .container');
    const headerPopup = document.createElement('div');
    headerPopup.className = 'header-popup';
    headerPopup.innerHTML = `\n        <div class="header-popup-image"><img src="${$img}" alt=""></div>\n        <div class="header-popup-wrap">\n            <div class="header-popup-title">Товар добавлен в корзину</div>\n            <div class="header-popup-item">${$productName}</div>\n        </div>\n    `;
    headerContainer.appendChild(headerPopup);
    timeout = setTimeout(() => {
        headerPopup.remove();
    }, 5e3);
}

window.popupAddedCart = popupAddedCart;

new Swiper('.hero .swiper', {
    modules: [Navigation, Pagination],
    slidesPerView: 1,
    spaceBetween: 20,
    loop: true,
    pagination: {
        el: '.hero .swiper-pagination',
        clickable: true
    },
    navigation: {
        nextEl: '.hero .swiper-btn-next',
        prevEl: '.hero .swiper-btn-prev'
    }
});

const slider = document.querySelectorAll('.slider');

slider.forEach((container) => {
    new Swiper(container.querySelector('.swiper'), {
        modules: [Navigation, Pagination],
        slidesPerView: 1,
        spaceBetween: 10,
        loop: true,
        pagination: {
            el: container.querySelector('.swiper-pagination'),
            clickable: true
        },
        navigation: {
            nextEl: container.querySelector('.swiper-btn-next'),
            prevEl: container.querySelector('.swiper-btn-prev')
        },
        breakpoints: {
            744: {
                slidesPerView: 2
            },
            1200: {
                slidesPerView: 3,
                spaceBetween: 20
            },
            1440: {
                slidesPerView: 4,
                spaceBetween: 20
            }
        }
    });
});

const productThumbs = new Swiper('.product-thumbs .swiper', {
    modules: [Navigation],
    slidesPerView: 5,
    spaceBetween: 10,
    watchSlidesProgress: true,
    direction: 'horizontal',
    navigation: {
        nextEl: '.product-thumbs .swiper-button-next',
        prevEl: '.product-thumbs .swiper-button-prev'
    },
    breakpoints: {
        1440: {
            slidesPerView: 5,
            spaceBetween: 20,
            direction: 'vertical'
        }
    }
});

new Swiper('.product-main .swiper', {
    modules: [Pagination, Thumb],
    slidesPerView: 1,
    spaceBetween: 30,
    thumbs: {
        swiper: productThumbs
    },
    pagination: {
        el: '.product-main .swiper-pagination',
        clickable: true
    }
});

window.$ = $;

Inputmask({
    mask: '+7 (999) 999-99-99',
    showMaskOnHover: false,
    showMaskOnFocus: false,
    onBeforePaste: (pastedValue, opts) => pastedValue.replace(/^8/, '')
}).mask('[phone-number]');

Inputmask({
    regex: '^[0-9]*$',
    allowMinus: false,
    showMaskOnHover: false,
    showMaskOnFocus: false,
    placeholder: ''
}).mask('[number-only]');

Inputmask({
    mask: '99-99-9999',
    allowMinus: false,
    showMaskOnHover: false,
    showMaskOnFocus: false
}).mask('[calendar]');

const anchor = document.querySelectorAll('[data-anchor]');

if (anchor.length > 0)
    anchor.forEach((el) => {
        el.onclick = function (e) {
            e.preventDefault();
            document
                .querySelector(`#${el.getAttribute('data-anchor').split('#')[1]}`)
                .scrollIntoView({
                    block: 'center',
                    behavior: 'smooth'
                });
        };
    });

$(window).on('scroll', function () {
    if ($(window).scrollTop() > $('#header').height()) $('#header').addClass('header-fixed');
    else if ($(window).scrollTop() == 0) $('#header').removeClass('header-fixed');
});

if ($(window).scrollTop() > $('#header').height()) $('#header').addClass('header-fixed');

$(document).on('keyup', (e) => {
    if (e.key == 'Escape') {
        $('.header__nav').removeClass('mobile-menu');
        $('body').removeClass('overflow-hidden');
        $('#header').removeClass('bg-overlay');
    }
});

$('.header__menu').on('click', (e) => {
    if (!$(e.currentTarget).hasClass('active')) {
        $('.header__nav').addClass('mobile-menu');
        $('body').addClass('overflow-hidden');
        $('#header').addClass('bg-overlay');
    } else {
        $('.header__nav').removeClass('mobile-menu');
        $('body').removeClass('overflow-hidden');
        $('#header').removeClass('bg-overlay');
    }
});

$('#header').on('click', (e) => {
    if (
        !$(e.target).closest('.header__menu').length &&
        !$(e.target).closest('.header__nav').length
    ) {
        $('.header__nav').removeClass('mobile-menu');
        $('body').removeClass('overflow-hidden');
        $('#header').removeClass('bg-overlay');
    }
});

$('.header__nav .close-menu').on('click', () => {
    $('.header__nav').removeClass('mobile-menu');
    $('body').removeClass('overflow-hidden');
    $('#header').removeClass('bg-overlay');
});

if ($(window).width() < 1200)
    $('nav .arrow-down').on('click', (e) => {
        $(e.target).parent().toggleClass('active');
        $(e.target).next().slideToggle();
    });

$(window).on('resize', () => {
    if ($(window).width() >= 1200) {
        $('.header__nav').removeClass('mobile-menu');
        $('body').removeClass('overflow-hidden');
        $('#header').removeClass('bg-overlay');
    }
});

$('.product-favourite').on('click', (e) => {
    $(e.currentTarget).toggleClass('active');
});

$('.pass-eye').on('click', (e) => {
    if ($(e.currentTarget).prev('input').attr('type') != 'text') {
        $(e.currentTarget).prev('input').attr('type', 'text');
        $(e.currentTarget)
            .find('svg')
            .html(
                '<path id="Icon" d="M3 3L6.58916 6.58916M21 21L17.4112 17.4112M13.8749 18.8246C13.2677 18.9398 12.6411 19 12.0005 19C7.52281 19 3.73251 16.0571 2.45825 12C2.80515 10.8955 3.33851 9.87361 4.02143 8.97118M9.87868 9.87868C10.4216 9.33579 11.1716 9 12 9C13.6569 9 15 10.3431 15 12C15 12.8284 14.6642 13.5784 14.1213 14.1213M9.87868 9.87868L14.1213 14.1213M9.87868 9.87868L6.58916 6.58916M14.1213 14.1213L6.58916 6.58916M14.1213 14.1213L17.4112 17.4112M6.58916 6.58916C8.14898 5.58354 10.0066 5 12.0004 5C16.4781 5 20.2684 7.94291 21.5426 12C20.8357 14.2507 19.3545 16.1585 17.4112 17.4112" stroke="#231F20" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>'
            );
    } else {
        $(e.currentTarget).prev('input').attr('type', 'password');
        $(e.currentTarget)
            .find('svg')
            .html(
                '<path d="M14.9998 12C14.9998 13.6569 13.6566 15 11.9998 15C10.3429 15 8.99976 13.6569 8.99976 12C8.99976 10.3431 10.3429 9 11.9998 9C13.6566 9 14.9998 10.3431 14.9998 12Z" stroke="#231F20" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/><path d="M2.45801 12C3.73228 7.94288 7.52257 5 12.0002 5C16.4778 5 20.2681 7.94291 21.5424 12C20.2681 16.0571 16.4778 19 12.0002 19C7.52256 19 3.73226 16.0571 2.45801 12Z" stroke="#231F20" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>'
            );
    }
});

$('.popup-tab__item').on('click', (e) => {
    $('.popup-tab__item').removeClass('active');
    $(e.currentTarget).addClass('active');
    $('.popup-block').removeClass('active');
    $(`.popup-block[data-show=${$(e.currentTarget).attr('data-active')}]`).addClass('active');
});

$('.filter-btn').on('click', () => {
    if (!$('.filter').hasClass('active')) {
        $('.filter').addClass('active');
        $('body').addClass('overflow-hidden');
        $('#page').addClass('bg-overlay');
    } else {
        $('.filter').removeClass('active');
        $('body').removeClass('overflow-hidden');
        $('#page').removeClass('bg-overlay');
    }
});

$('.filter-close').on('click', () => {
    $('.filter').removeClass('active');
    $('body').removeClass('overflow-hidden');
    $('#page').removeClass('bg-overlay');
});

$('.filter__name').on('click', (e) => {
    $(e.currentTarget).closest('.filter__row').toggleClass('active');
    $(e.currentTarget).closest('.filter__row').find('.filter__item').slideToggle();
});

$('.select').on('click', (e) => {
    if ($(e.currentTarget).hasClass('toggle')) $(e.currentTarget).removeClass('toggle');
    else $(e.currentTarget).addClass('toggle');
});

$('.option__item').on('click', (e) => {
    $('.select-value').text($(e.currentTarget).text());
});

$('html').on('click', (e) => {
    if (
        !$(e.target).closest('.filter').length &&
        !$(e.target).closest('.filter-btn').length &&
        !$(e.target).closest('.sort').length
    ) {
        $('body').removeClass('overflow-hidden');
        $('#page').removeClass('bg-overlay');
        $('.filter').removeClass('active');
        $('.select').removeClass('toggle');
    }
});

$('.brick-item').on('click', (e) => {
    $(e.currentTarget).closest('.bricks').find('.brick-item').removeClass('selected');
    $(e.currentTarget).addClass('selected');
});

$('.qty-input .qty').on('click', (e) => {
    if (
        $(e.currentTarget).hasClass('qty-minus') &&
        $(e.currentTarget).parent().find('input').val() > 1
    )
        $(e.currentTarget)
            .parent()
            .find('input')
            .val(Number($(e.currentTarget).parent().find('input').val()) - 1);
    if (
        $(e.currentTarget).hasClass('qty-plus') &&
        $(e.currentTarget).parent().find('input').val() < 999
    )
        $(e.currentTarget)
            .parent()
            .find('input')
            .val(Number($(e.target).parent().find('input').val()) + 1);
});

$('.tab .tab-item').on('click', (e) => {
    $('.tab .tab-item').removeClass('active');
    $(e.currentTarget).addClass('active');
    $('.tab-content').removeClass('active');
    $(`.tab-content[data-show=${$(e.currentTarget).attr('data-active')}]`).addClass('active');
});

if ($(window).width() < 744)
    $('.nav-link__item').on('click', (e) => {
        if ($(e.currentTarget).hasClass('active')) {
            e.preventDefault();
            $(e.currentTarget).closest('.nav-link').toggleClass('dropdown');
        }
    });

$('.faq__item-title').on('click', (e) => {
    if (!$(e.currentTarget).hasClass('active')) {
        $('.faq__item-title').removeClass('active');
        $('.faq__item-title').next().slideUp();
        $(e.currentTarget).addClass('active');
        $(e.currentTarget).next().slideDown();
    } else {
        $(e.currentTarget).removeClass('active');
        $(e.currentTarget).next().slideUp();
    }
});

const fileInput = $('#file')[0];

const progressBar = $('.progress');

$(fileInput).on('change', function () {
    $(this).parent().find('.progress').css('width', 0);
    const fileName = $(this).val().split('\\').pop();
    const fileSize =
        this.files[0].size / 1e3 >= 1024
            ? (this.files[0].size / 1e6).toFixed(1) + ' MB'
            : (this.files[0].size / 1e3).toFixed(1) + ' KB';
    $(this).parent().find('.file-name').text(`Файл ${fileName} загружен`);
    $(this).parent().find('.file-info').text(fileSize);
    $('.input-file-img').html(
        `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="12" viewBox="0 0 16 12" fill="none">\n            <path d="M1 7L5 11L15 1" stroke="#219653" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>\n            </svg>`
    );
    const file = this.files[0];
    const f_size = file.size;
    const chunkSize = 1024 * 1024;
    let bytesUploaded = 0;
    const uploadChunk = () => {
        const chunk = file.slice(bytesUploaded, bytesUploaded + chunkSize);
        bytesUploaded += chunk.size;
        setTimeout(() => {
            const progress = Math.min(100, Math.round((bytesUploaded / f_size) * 100));
            progressBar.css('width', progress + '%');
            if (bytesUploaded < f_size) uploadChunk();
        }, 1);
    };
    uploadChunk();
    $('.input-file-icon').addClass('remove');
    $(this).attr('disabled', true);
});

$('.input-file-icon').on('click', function () {
    if ($(this).hasClass('remove')) {
        $(this).removeClass('remove');
        $(this).parent().find($(fileInput)).removeAttr('disabled');
        $(this).parent().find('.progress').css('width', 0);
        $(this).parent().find('.file-name').text('Загрузите изображение *');
        $(this).parent().find('.file-info').text('jpeg, png, pdf');
        $(this)
            .parent()
            .find('.input-file-img')
            .html(`<img src="${home_dir}/assets/images/img.svg" alt="">`);
        $(fileInput).val('');
    }
});
